{"version":3,"sources":["components/UI/Container.jsx","components/Title.jsx","store/todo.js","components/TitleForm.jsx","store/todoListSlice.js","store/editTooFormSlice.js","components/Todo.jsx","components/TodoList.jsx","components/EditTodoForm.jsx","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["Container","props","className","children","Title","COLORS","todoSlice","createSlice","name","initialState","todos","tempText","lastId","lastColor","reducers","initializeHandler","state","existingTodos","JSON","parse","localStorage","getItem","existingLastColor","existingLastId","deleteHandler","action","filter","todo","id","payload","setItem","stringify","doneHandler","find","isDone","addTodoHandler","text","trim","color","index","lastIndexOf","push","changeTitleHandler","updateTextHandler","todoActions","actions","TitleForm","inputtedTodoText","useSelector","dispatch","useDispatch","onSubmit","event","preventDefault","type","placeholder","onChange","target","value","todoListSlice","isShow","isShowHandler","todoListSliceActions","editTodoFormSlice","changeTextHandler","editTodoFormSliceActions","Todo","isShowTodoList","todoList","data","onClick","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","TodoList","useEffect","map","EditTodoForm","isShowEditTodoForm","editTodoForm","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8KAUeA,MARf,SAAmBC,GACjB,OACE,qBAAKC,UAAU,uLAAf,SACGD,EAAME,YCKEC,MARf,WACI,OACI,oBAAIF,UAAU,4FAAd,yC,cCFFG,EAAS,CAAC,MAAO,SAAU,QAAS,OAAQ,SAAU,SAAU,QAQhEC,EAAYC,YAAY,CAC5BC,KAAM,OACNC,aATuB,CACvBC,MAAO,GACPC,SAAU,GACVC,OAAQ,EACRC,UAAW,QAMXC,SAAU,CACRC,kBADQ,SACUC,GAChB,IAAMC,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,UAChDC,EAAoBF,aAAaC,QAAQ,aACzCE,GAAkBH,aAAaC,QAAQ,UAEzCJ,IACFD,EAAMN,MAAQO,EACdD,EAAMH,UAAYS,EAClBN,EAAMJ,OAASW,IAInBC,cAbQ,SAaMR,EAAOS,GACnBT,EAAMN,MAAQM,EAAMN,MAAMgB,QAAO,SAACC,GAAD,OAAUA,EAAKC,KAAOH,EAAOI,WAE9DT,aAAaU,QAAQ,QAASZ,KAAKa,UAAUf,EAAMN,SAErDsB,YAlBQ,SAkBIhB,EAAOS,GACIT,EAAMN,MAAMuB,MAC/B,SAACN,GAAD,OAAUA,EAAKC,KAAOH,EAAOI,WAElBK,QAAS,EAEtBlB,EAAMN,MAAQM,EAAMN,MAAMgB,QAAO,SAACC,GAAD,OAAUA,EAAKC,KAAOH,EAAOI,YAEhEM,eA1BQ,SA0BOnB,GAEb,IAAIoB,EAAO,GACX,GAA8B,KAA1BpB,EAAML,SAAS0B,OAAnB,CAGED,EAAOpB,EAAML,SAAS0B,OAIxB,IACIC,EADAC,EAAQlC,EAAOmC,YAAYxB,EAAMH,WAGnCyB,EADEC,EAAQ,EAAI,EACN,MAEAlC,EAAOkC,EAAQ,GAGzBvB,EAAMN,MAAM+B,KAAK,CACfb,GAAIZ,EAAMJ,OAAS,EACnBwB,KAAMA,EACNE,MAAOA,EACPJ,QAAQ,IAGVlB,EAAMJ,SACNI,EAAMH,UAAYyB,EAClBtB,EAAML,SAAW,GAEjBS,aAAaU,QAAQ,QAASZ,KAAKa,UAAUf,EAAMN,QACnDU,aAAaU,QAAQ,SAAUZ,KAAKa,UAAUf,EAAMJ,SACpDQ,aAAaU,QAAQ,YAAaZ,KAAKa,UAAUf,EAAMH,cAEzD6B,mBA3DQ,SA2DW1B,EAAOS,GACxBT,EAAML,SAAWc,EAAOI,SAE1Bc,kBA9DQ,SA8DU3B,EAAOS,GACFT,EAAMN,MAAMuB,MAC/B,SAACN,GAAD,OAAUA,EAAKC,KAAOH,EAAOI,QAAQD,MAG1BQ,KAAOX,EAAOI,QAAQO,KACnChB,aAAaU,QAAQ,QAASZ,KAAKa,UAAUf,EAAMN,YAK5CkC,EAActC,EAAUuC,QACtBvC,ICrDAwC,MA9Bf,WACE,IAAMC,EAAmBC,aAAY,SAAChC,GAAD,OAAWA,EAAMW,KAAKhB,YACrDsC,EAAWC,cAYjB,OACE,uBAAMC,SAXgB,SAACC,GACvBA,EAAMC,iBAENJ,EAASL,EAAYT,mBAQYjC,UAAU,2BAA3C,UACE,uBACEoD,KAAK,OACLC,YAAY,aACZrD,UAAU,iKACVsD,SAVuB,SAACJ,GAC5BH,EAASL,EAAYF,mBAAmBU,EAAMK,OAAOC,SAUjDA,MAAOX,IAET,wBAAQ7C,UAAU,+HAAlB,0BCvBAyD,EAAgBpD,YAAY,CAChCC,KAAM,WACNC,aAJ2B,CAAEmD,QAAQ,GAKrC9C,SAAU,CACR+C,cADQ,SACM7C,GACZA,EAAM4C,QAAU5C,EAAM4C,WAKfE,EAAuBH,EAAcd,QACnCc,ICPTI,EAAoBxD,YAAY,CACpCC,KAAM,eACNC,aAR+B,CAC/BmD,QAAQ,EACRxB,KAAM,GACNR,GAAI,GAMJd,SAAU,CACR+C,cADQ,SACM7C,EAAOS,GACnBT,EAAM4C,QAAU5C,EAAM4C,OACtB5C,EAAMoB,KAAOX,EAAOI,QAAQO,KAC5BpB,EAAMY,GAAKH,EAAOI,QAAQD,IAE5BoC,kBANQ,SAMUhD,EAAOS,GACvBT,EAAMoB,KAAOX,EAAOI,YAKboC,EAA2BF,EAAkBlB,QAC3CkB,ICgDAG,MAlEf,SAAcjE,GACZ,IAAMkE,EAAiBnB,aAAY,SAAChC,GAAD,OAAWA,EAAMoD,SAASR,UACvDX,EAAWC,cAoBjB,OACEiB,GACE,sBACEjE,UAAS,sFAAiFD,EAAMoE,KAAK/B,MAA5F,mBAA4GrC,EAAMoE,KAAK/B,MAAvH,2CAA+JrC,EAAMoE,KAAK/B,MAA1K,oBACTgC,QAdwB,SAAClB,GAC7BH,EAASa,EAAqBD,iBAC9BZ,EACEgB,EAAyBJ,cAAc,CACrCzB,KAAMnC,EAAMoE,KAAKjC,KACjBR,GAAI3B,EAAMoE,KAAKzC,OAOjB,UAIE,oBAAI1B,UAAU,aAAd,SAA4BD,EAAMoE,KAAKjC,OACvC,sBAAKlC,UAAU,OAAf,UACE,qBACEA,UAAU,4CACVoE,QA5BgB,SAAClB,GACzBH,EAASL,EAAYpB,cAAcvB,EAAMoE,KAAKzC,MA4BtC2C,KAAK,OACLC,OAAO,eACPC,QAAQ,YACRC,MAAM,6BANR,SAQE,sBACEC,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,2EAGN,qBACE5E,UAAU,uCACVoE,QAvCU,SAAClB,GACnBH,EAASL,EAAYZ,YAAY/B,EAAMoE,KAAKzC,MAuCpC2C,KAAK,OACLC,OAAO,eACPC,QAAQ,YACRC,MAAM,6BANR,SAQE,sBACEC,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,oDAEC,WCzCFC,MAjBf,WACE,IAAMV,EAAOrB,aAAY,SAAChC,GAAD,OAAWA,EAAMW,KAAKjB,SACzCuC,EAAWC,cAMjB,OAJA8B,qBAAU,WACR/B,EAASL,EAAY7B,uBACpB,IAGD,qBAAKb,UAAU,gBAAf,SACGmE,EAAKY,KAAI,SAACtD,GAAD,OACR,cAAC,EAAD,CAAM0C,KAAM1C,GAAWA,EAAKC,UCsBrBsD,MAlCf,WACE,IAAMC,EAAqBnC,aAAY,SAAChC,GAAD,OAAWA,EAAMoE,aAAaxB,UAC/DxB,EAAOY,aAAY,SAAChC,GAAD,OAAWA,EAAMoE,aAAahD,QACjDR,EAAKoB,aAAY,SAAChC,GAAD,OAAWA,EAAMoE,aAAaxD,MAC/CqB,EAAWC,cAYjB,OACEiC,GACE,uBAAMhC,SAZc,SAACC,GACvBA,EAAMC,iBACNJ,EAASa,EAAqBD,iBAC9BZ,EAASgB,EAAyBJ,cAAc,KAChDZ,EAASL,EAAYD,kBAAkB,CAACP,OAAMR,SAQX1B,UAAU,2BAA3C,UACE,uBACEoD,KAAK,OACLC,YAAY,aACZrD,UAAU,iKACVsD,SAVqB,SAACJ,GAC5BH,EAASgB,EAAyBD,kBAAkBZ,EAAMK,OAAOC,SAU3DA,MAAOtB,IAET,wBAAQlC,UAAU,+HAAlB,wBCfOmF,MAXf,WACE,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCASC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCMCQ,EARDC,YAAe,CAC3BC,QAAS,CACPtE,KAAMrB,EAAU2F,QAChB7B,SAAUT,EAAcsC,QACxBb,aAAcrB,EAAkBkC,WCApCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJM,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.0cdaa27c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Container(props) {\r\n  return (\r\n    <div className=\"flex flex-col justify-start pt-3 sm:p-3 bg-gray-900 w-full min-h-screen sm:min-h-full sm:mt-6 sm:mb-6 sm:max-w-md sm:rounded-xl sm:mx-auto md:mt-12 md:mb-12 md:max-w-lg lg:max-w-xl\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","import React from 'react'\r\n\r\nfunction Title() {\r\n    return (\r\n        <h1 className='flex-shrink text-white font-semibold text-lg sm:text-xl md:text-2xl text-center mb-6 mt-4'>\r\n            What's the Plan for Today?\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport default Title\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst COLORS = [\"red\", \"yellow\", \"green\", \"blue\", \"indigo\", \"purple\", \"pink\"];\r\nconst initialTodoState = {\r\n  todos: [],\r\n  tempText: \"\",\r\n  lastId: 0,\r\n  lastColor: \"blue\",\r\n};\r\n\r\nconst todoSlice = createSlice({\r\n  name: \"todo\",\r\n  initialState: initialTodoState,\r\n  reducers: {\r\n    initializeHandler(state) {\r\n      const existingTodos = JSON.parse(localStorage.getItem(\"todos\"));\r\n      const existingLastColor = localStorage.getItem(\"lastColor\");\r\n      const existingLastId = +localStorage.getItem(\"lastId\");\r\n\r\n      if (existingTodos) {\r\n        state.todos = existingTodos;\r\n        state.lastColor = existingLastColor;\r\n        state.lastId = existingLastId;\r\n      }\r\n    },\r\n\r\n    deleteHandler(state, action) {\r\n      state.todos = state.todos.filter((todo) => todo.id !== action.payload);\r\n\r\n      localStorage.setItem(\"todos\", JSON.stringify(state.todos));\r\n    },\r\n    doneHandler(state, action) {\r\n      const existingItem = state.todos.find(\r\n        (todo) => todo.id === action.payload\r\n      );\r\n      existingItem.isDone = true;\r\n\r\n      state.todos = state.todos.filter((todo) => todo.id !== action.payload);\r\n    },\r\n    addTodoHandler(state) {\r\n      // set text\r\n      let text = \"\";\r\n      if (state.tempText.trim() === \"\") {\r\n        return;\r\n      } else {\r\n        text = state.tempText.trim();\r\n      }\r\n\r\n      // set color\r\n      let index = COLORS.lastIndexOf(state.lastColor);\r\n      let color;\r\n      if (index + 1 > 6) {\r\n        color = \"red\";\r\n      } else {\r\n        color = COLORS[index + 1];\r\n      }\r\n\r\n      state.todos.push({\r\n        id: state.lastId + 1,\r\n        text: text,\r\n        color: color,\r\n        isDone: false,\r\n      });\r\n\r\n      state.lastId++;\r\n      state.lastColor = color;\r\n      state.tempText = \"\";\r\n\r\n      localStorage.setItem(\"todos\", JSON.stringify(state.todos));\r\n      localStorage.setItem(\"lastId\", JSON.stringify(state.lastId));\r\n      localStorage.setItem(\"lastColor\", JSON.stringify(state.lastColor));\r\n    },\r\n    changeTitleHandler(state, action) {\r\n      state.tempText = action.payload;\r\n    },\r\n    updateTextHandler(state, action) {\r\n      const existingItem = state.todos.find(\r\n        (todo) => todo.id === action.payload.id\r\n      );\r\n\r\n      existingItem.text = action.payload.text;\r\n      localStorage.setItem(\"todos\", JSON.stringify(state.todos));\r\n    },\r\n  },\r\n});\r\n\r\nexport const todoActions = todoSlice.actions;\r\nexport default todoSlice;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { todoActions } from \"../store/todo\";\r\n\r\nfunction TitleForm() {\r\n  const inputtedTodoText = useSelector((state) => state.todo.tempText);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    dispatch(todoActions.addTodoHandler());\r\n  };\r\n\r\n  const onChangeInputHandler = (event) => {\r\n    dispatch(todoActions.changeTitleHandler(event.target.value));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmitHandler} className=\"flex justify-center mb-6\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add a todo\"\r\n        className=\"appearance-none bg-gray-900 text-white text-sm px-3 py-2 w-1/2 rounded-l-md border-2 border-purple-900 focus:outline-none focus:border focus:border-purple-500\"\r\n        onChange={onChangeInputHandler}\r\n        value={inputtedTodoText}\r\n      />\r\n      <button className=\"bg-gradient-to-r from-blue-700 to-purple-700 text-sm px-3 py-2 text-white rounded-r-md border-2 border-l-0 border-purple-800\">\r\n        Add Todo\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TitleForm;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialTodoListState = { isShow: true };\r\n\r\nconst todoListSlice = createSlice({\r\n  name: \"todoList\",\r\n  initialState: initialTodoListState,\r\n  reducers: {\r\n    isShowHandler(state) {\r\n      state.isShow = !state.isShow;\r\n    },\r\n  },\r\n});\r\n\r\nexport const todoListSliceActions = todoListSlice.actions;\r\nexport default todoListSlice;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialEditTodoFormState = {\r\n  isShow: false,\r\n  text: \"\",\r\n  id: 0\r\n};\r\n\r\nconst editTodoFormSlice = createSlice({\r\n  name: \"editTodoForm\",\r\n  initialState: initialEditTodoFormState,\r\n  reducers: {\r\n    isShowHandler(state, action) {\r\n      state.isShow = !state.isShow;\r\n      state.text = action.payload.text;\r\n      state.id = action.payload.id;\r\n    },\r\n    changeTextHandler(state, action) {\r\n      state.text = action.payload;\r\n    }\r\n  },\r\n});\r\n\r\nexport const editTodoFormSliceActions = editTodoFormSlice.actions;\r\nexport default editTodoFormSlice;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { todoActions } from \"../store/todo\";\r\nimport { todoListSliceActions } from \"../store/todoListSlice\";\r\nimport { editTodoFormSliceActions } from \"../store/editTooFormSlice\";\r\n\r\nfunction Todo(props) {\r\n  const isShowTodoList = useSelector((state) => state.todoList.isShow);\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteTodoHandler = (event) => {\r\n    dispatch(todoActions.deleteHandler(props.data.id));\r\n  };\r\n\r\n  const doneHandler = (event) => {\r\n    dispatch(todoActions.doneHandler(props.data.id));\r\n  };\r\n\r\n  const isShowTodoListHandler = (event) => {\r\n    dispatch(todoListSliceActions.isShowHandler());\r\n    dispatch(\r\n      editTodoFormSliceActions.isShowHandler({\r\n        text: props.data.text,\r\n        id: props.data.id,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    isShowTodoList && (\r\n      <div\r\n        className={`flex justify-between px-3 py-3 mx-4 mb-3 items-center bg-gradient-to-r from-${props.data.color}-500 to-${props.data.color}-700 rounded-md border-2 border-${props.data.color}-600 cursor-text`}\r\n        onClick={isShowTodoListHandler}\r\n      >\r\n        <h1 className=\"text-white\">{props.data.text}</h1>\r\n        <div className=\"flex\">\r\n          <svg\r\n            className=\"w-6 h-6 text-gray-200 mr-1 cursor-pointer\"\r\n            onClick={deleteTodoHandler}\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            viewBox=\"0 0 24 24\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth={2}\r\n              d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n            />\r\n          </svg>\r\n          <svg\r\n            className=\"w-6 h-6 text-gray-200 cursor-pointer\"\r\n            onClick={doneHandler}\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            viewBox=\"0 0 24 24\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth={2}\r\n              d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n            />\r\n          </svg>{\" \"}\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { todoActions } from \"../store/todo\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoList() {\r\n  const data = useSelector((state) => state.todo.todos);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(todoActions.initializeHandler());\r\n  }, []);\r\n\r\n  return (\r\n    <div className='flex flex-col'>\r\n      {data.map((todo) => (\r\n        <Todo data={todo} key={todo.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { editTodoFormSliceActions } from \"../store/editTooFormSlice\";\r\nimport { todoListSliceActions } from \"../store/todoListSlice\";\r\nimport { todoActions } from \"../store/todo\";\r\n\r\nfunction EditTodoForm() {\r\n  const isShowEditTodoForm = useSelector((state) => state.editTodoForm.isShow);\r\n  const text = useSelector((state) => state.editTodoForm.text);\r\n  const id = useSelector((state) => state.editTodoForm.id);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n    dispatch(todoListSliceActions.isShowHandler());\r\n    dispatch(editTodoFormSliceActions.isShowHandler(\"\"));\r\n    dispatch(todoActions.updateTextHandler({text, id}))\r\n  };\r\n\r\n  const onChangeInputHandler = (event) => {\r\n    dispatch(editTodoFormSliceActions.changeTextHandler(event.target.value));\r\n  };\r\n  return (\r\n    isShowEditTodoForm && (\r\n      <form onSubmit={onSubmitHandler} className=\"flex justify-center mb-6\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a todo\"\r\n          className=\"appearance-none bg-gray-900 text-white text-sm px-3 py-2 w-1/2 rounded-l-md border-2 border-purple-900 focus:outline-none focus:border focus:border-purple-500\"\r\n          onChange={onChangeInputHandler}\r\n          value={text}\r\n        />\r\n        <button className=\"bg-gradient-to-r from-blue-700 to-purple-700 text-sm px-3 py-2 text-white rounded-r-md border-2 border-l-0 border-purple-800\">\r\n          Update\r\n        </button>\r\n      </form>\r\n    )\r\n  );\r\n}\r\n\r\nexport default EditTodoForm;\r\n","import Container from \"./components/UI/Container\";\nimport Title from \"./components/Title\";\nimport TitleForm from \"./components/TitleForm\";\nimport TodoList from \"./components/TodoList\";\nimport EditTodoForm from \"./components/EditTodoForm\";\n\nfunction App() {\n  return (\n    <Container>\n      <Title />\n      <TitleForm />\n      <TodoList />\n      <EditTodoForm />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport todoSlice from \"./todo\";\r\nimport todoListSlice from \"./todoListSlice\";\r\nimport editTodoFormSlice from \"./editTooFormSlice\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    todo: todoSlice.reducer,\r\n    todoList: todoListSlice.reducer,\r\n    editTodoForm: editTodoFormSlice.reducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}