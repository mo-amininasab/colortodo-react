{"version":3,"sources":["components/UI/Container.jsx","components/Title.jsx","store/todo.js","components/TitleForm.jsx","components/Todo.jsx","components/TodoList.jsx","App.js","reportWebVitals.js","store/index.js","index.js"],"names":["Container","props","className","children","Title","COLORS","todoSlice","createSlice","name","initialState","todos","tempText","lastId","lastColor","reducers","initializeHandler","state","existingTodos","JSON","parse","localStorage","getItem","existingLastColor","existingLastId","deleteHandler","action","filter","todo","id","payload","doneHandler","find","isDone","addTodoHandler","text","trim","color","index","lastIndexOf","push","setItem","stringify","console","log","changeTitleHandler","todoActions","actions","TitleForm","inputtedTodoText","useSelector","dispatch","useDispatch","onSubmit","event","preventDefault","type","placeholder","onChange","target","value","Todo","data","onClick","fill","stroke","viewBox","xmlns","strokeLinecap","strokeLinejoin","strokeWidth","d","TodoList","useEffect","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98023bad.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Container(props) {\r\n  return (\r\n    <div className=\"flex flex-col justify-start pt-3 sm:p-3 bg-gray-900 w-full min-h-screen sm:min-h-full sm:mt-6 sm:mb-6 sm:max-w-md sm:rounded-xl sm:mx-auto md:mt-12 md:mb-12 md:max-w-lg lg:max-w-xl\">\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","import React from 'react'\r\n\r\nfunction Title() {\r\n    return (\r\n        <h1 className='flex-shrink text-white font-semibold text-lg sm:text-xl md:text-2xl text-center mb-6'>\r\n            What's the Plan for Today?\r\n        </h1>\r\n    )\r\n}\r\n\r\nexport default Title\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst COLORS = [\"red\", \"yellow\", \"green\", \"blue\", \"indigo\", \"purple\", \"pink\"];\r\nconst initialTodoState = {\r\n  todos: [],\r\n  tempText: \"\",\r\n  lastId: 0,\r\n  lastColor: \"blue\",\r\n};\r\n\r\nconst todoSlice = createSlice({\r\n  name: \"todo\",\r\n  initialState: initialTodoState,\r\n  reducers: {\r\n    initializeHandler(state) {\r\n      const existingTodos = JSON.parse(localStorage.getItem(\"todos\"));\r\n      const existingLastColor = localStorage.getItem(\"lastColor\");\r\n      const existingLastId = +localStorage.getItem(\"lastId\");\r\n\r\n      if (existingTodos) {\r\n        state.todos = existingTodos;\r\n        state.lastColor = existingLastColor;\r\n        state.lastId = existingLastId;\r\n      }\r\n  \r\n  \r\n    },\r\n    \r\n    deleteHandler(state, action) {\r\n      state.todos = state.todos.filter((todo) => todo.id !== action.payload);\r\n    },\r\n    doneHandler(state, action) {\r\n      const existingItem = state.todos.find(\r\n        (todo) => todo.id === action.payload\r\n      );\r\n      existingItem.isDone = true;\r\n\r\n      state.todos = state.todos.filter((todo) => todo.id !== action.payload);\r\n    },\r\n    addTodoHandler(state) {\r\n      // set text\r\n      let text = \"\";\r\n      if (state.tempText.trim() === \"\") {\r\n        return;\r\n      } else {\r\n        text = state.tempText.trim();\r\n      }\r\n\r\n      // set color\r\n      let index = COLORS.lastIndexOf(state.lastColor);\r\n      let color;\r\n      if (index + 1 > 6) {\r\n        color = \"red\";\r\n      } else {\r\n        color = COLORS[index + 1];\r\n      }\r\n\r\n      state.todos.push({\r\n        id: state.lastId + 1,\r\n        text: text,\r\n        color: color,\r\n        isDone: false,\r\n      });\r\n\r\n      state.lastId++;\r\n      state.lastColor = color;\r\n      state.tempText = \"\";\r\n\r\n      localStorage.setItem(\"todos\", JSON.stringify(state.todos));\r\n      localStorage.setItem(\"lastId\", JSON.stringify(state.lastId));\r\n      localStorage.setItem(\"lastColor\", JSON.stringify(state.lastColor));\r\n      console.log(JSON.parse(localStorage.getItem('todos')));\r\n    },\r\n    changeTitleHandler(state, action) {\r\n      state.tempText = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const todoActions = todoSlice.actions;\r\nexport default todoSlice;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { todoActions } from \"../store/todo\";\r\n\r\nfunction TitleForm() {\r\n  const inputtedTodoText = useSelector((state) => state.todo.tempText);\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    dispatch(todoActions.addTodoHandler());\r\n  };\r\n\r\n  const onChangeInputHandler = (event) => {\r\n    dispatch(todoActions.changeTitleHandler(event.target.value));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmitHandler} className=\"flex justify-center mb-6\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Add a todo\"\r\n        className=\"appearance-none bg-gray-900 text-white text-sm px-3 py-2 w-1/2 rounded-l-md border-2 border-purple-900 focus:outline-none focus:border focus:border-purple-500\"\r\n        onChange={onChangeInputHandler}\r\n        value={inputtedTodoText}\r\n      />\r\n      <button className=\"bg-gradient-to-r from-blue-700 to-purple-700 text-sm px-3 py-2 text-white rounded-r-md border-2 border-l-0 border-purple-800\">\r\n        Add Todo\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TitleForm;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { todoActions } from \"../store/todo\";\r\n\r\nfunction Todo(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteTodoHandler = (event) => {\r\n    dispatch(todoActions.deleteHandler(props.data.id));\r\n  };\r\n\r\n  const doneHandler = (event) => {\r\n    dispatch(todoActions.doneHandler(props.data.id));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`flex justify-between px-3 py-3 mx-4 mb-3 items-center bg-gradient-to-r from-${props.data.color}-500 to-${props.data.color}-700 rounded-md border-2 border-${props.data.color}-600`}\r\n    >\r\n      <h1 className=\"text-white\">{props.data.text}</h1>\r\n      <div className=\"flex\">\r\n        <svg\r\n          className=\"w-6 h-6 text-gray-200 mr-1 cursor-pointer\"\r\n          onClick={deleteTodoHandler}\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          viewBox=\"0 0 24 24\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth={2}\r\n            d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n          />\r\n        </svg>\r\n        <svg\r\n          className=\"w-6 h-6 text-gray-200 cursor-pointer\"\r\n          onClick={doneHandler}\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          viewBox=\"0 0 24 24\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth={2}\r\n            d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n          />\r\n        </svg>{\" \"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { todoActions } from \"../store/todo\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoList() {\r\n  const data = useSelector((state) => state.todo.todos);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(todoActions.initializeHandler());\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {data.map((todo) => (\r\n        <Todo data={todo} key={todo.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import Container from \"./components/UI/Container\";\nimport Title from \"./components/Title\";\nimport TitleForm from \"./components/TitleForm\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  return (\n    <Container>\n      <Title />\n      <TitleForm />\n      <TodoList />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport todoSlice from \"./todo\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    todo: todoSlice.reducer,\r\n  },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store/index\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}